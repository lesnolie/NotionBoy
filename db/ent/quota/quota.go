// Code generated by ent, DO NOT EDIT.

package quota

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the quota type in the database.
	Label = "quota"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldCategory holds the string denoting the category field in the database.
	FieldCategory = "category"
	// FieldDaily holds the string denoting the daily field in the database.
	FieldDaily = "daily"
	// FieldMonthly holds the string denoting the monthly field in the database.
	FieldMonthly = "monthly"
	// FieldYearly holds the string denoting the yearly field in the database.
	FieldYearly = "yearly"
	// FieldDailyUsed holds the string denoting the daily_used field in the database.
	FieldDailyUsed = "daily_used"
	// FieldMonthlyUsed holds the string denoting the monthly_used field in the database.
	FieldMonthlyUsed = "monthly_used"
	// FieldYearlyUsed holds the string denoting the yearly_used field in the database.
	FieldYearlyUsed = "yearly_used"
	// Table holds the table name of the quota in the database.
	Table = "quota"
)

// Columns holds all SQL columns for quota fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeleted,
	FieldUserID,
	FieldCategory,
	FieldDaily,
	FieldMonthly,
	FieldYearly,
	FieldDailyUsed,
	FieldMonthlyUsed,
	FieldYearlyUsed,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
)

// Category defines the type for the "category" enum field.
type Category string

// Category values.
const (
	CategoryChatgpt Category = "chatgpt"
)

func (c Category) String() string {
	return string(c)
}

// CategoryValidator is a validator for the "category" field enum values. It is called by the builders before save.
func CategoryValidator(c Category) error {
	switch c {
	case CategoryChatgpt:
		return nil
	default:
		return fmt.Errorf("quota: invalid enum value for category field: %q", c)
	}
}
